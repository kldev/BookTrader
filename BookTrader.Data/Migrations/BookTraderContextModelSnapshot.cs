// <auto-generated />
using System;
using BookTrader.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BookTrader.Data.Migrations
{
    [DbContext(typeof(BookTraderContext))]
    partial class BookTraderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BookTrader.Data.Model.Book", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasMaxLength(100);

                    b.Property<DateTime>("Added")
                        .HasColumnName("added");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnName("author")
                        .HasMaxLength(200);

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("price")
                        .HasDefaultValue(0.0m);

                    b.Property<int>("SoldCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sold_count")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(200);

                    b.Property<string>("TraderId")
                        .IsRequired()
                        .HasColumnName("trader_id")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("TraderId");

                    b.ToTable("bt_book");
                });

            modelBuilder.Entity("BookTrader.Data.Model.Trader", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasMaxLength(100);

                    b.Property<string>("EMail")
                        .HasColumnName("email")
                        .HasMaxLength(100);

                    b.Property<string>("Lastname")
                        .HasColumnName("last_name")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.ToTable("bt_trader");
                });

            modelBuilder.Entity("BookTrader.Data.Model.Book", b =>
                {
                    b.HasOne("BookTrader.Data.Model.Trader", "Trader")
                        .WithMany("BookList")
                        .HasForeignKey("TraderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
